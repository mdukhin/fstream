; report.cfg
;--------------------------------------------------
#opencfg <abbrs.cfg>
#opencfg <ofmls.cfg>
SECPATH=abbrs::;.;$CURCFG::;::

;==========================================================
; глобальные переменные для подготовки печатной копии отчета
[init]
const char main_class=DB_Cfgsec
__init=\
#{
StdEnv.SomeVarsToColl(
"OurBank{}.name,"+
"OurBank{}.inn,"+
"OurBank{}.okpo,"+
"OurBank{}.kpp,"+
"OurBank{}.okato,"+
"OurBank{}.ogrn,"+
"OurBank{}.BIK,"+
"OurBank{}.Banks.regno,"+
"OurBank{}.Banks.nrkc_corr,"+
"OurBank{}.Banks.RKC.name,"+
"OurBank{}.Banks.RKC.mfo2,"+
"OurBank{}.address,"+
"OurBank{}.manager1_name,"+
"OurBank{}.manager1_post,"+
"OurBank{}.manager2_name,"+
"OurBank{}.manager2_post,"+
"OurBank{}.manager3_name,"+
"OurBank{}.manager3_post,"+
"CurrUser.name"
,CURRENT.get_name(),
"BankName,"+
"BankINN,"+
"BankOKPO,"+
"BankKPP,"+
"BankOKATO,"+
"BankOGRN,"+
"BankBIC,"+
"BankRegNum,"+
"BankRkcCorr,"+
"BankRkcName,"+
"BankRkcBIC,"+
"BankAddr,"+
"Manager,"+
"ManagerPost,"+
"Accountant,"+
"AccountantPost,"+
"CashChief,"+
"CashChiefPost,"+
"UserName"
);
#}

;==========================================================
; шаблон описания группы отчетов с выбором дня
template [Group]
const char main_class=CfgSectClass
; contents - список отчетов в группе:
; 1) если не задан, то сама группа расматривается как отчет
; 2) в противном случае, перечисляются через запятую отчеты, входящие
;    в группу (по умолчанию, в файле 'report')
char contents=
;----------------------------------------------------------
; __export=<var_name>[,]...
;           - list of vars to export to every report section of group
; признак того, что отчет вызван пользователем, а не автоматически
long Human=1
char __export=Human
;----------------------------------------------------------
long Otoday=0
long __init_RES=0
char __init=\
#{
  __init_RES=ObjGetInt("report::ask_Otoday",${ofmls:::ooMformRepaintGo},0);
  ObjDelete("report::ask_Otoday");
; ESC - дату не меняем
  @@__init_RES==0? return(0): 0;
  Otoday=ConfigGet("report::ask_Otoday:Otoday");
#}
;----------------------------------------------------------
; шаблон описания группы отчетов без выбора дня
[GroupDay] default: Group
char __init=Otoday=Otoday()
long __init_RES=1
;----------------------------------------------------------
; Шаблон описания группы отчетов с выбором филиала и дня
[GroupBranchDay] default: Group
long Otoday=0
char REPOUT=
long c_branch=0
char brname=
__export=${__export}${__export%+,}c_branch,brname
long __init_RES=0
__init=\
#{
  __init_RES=ObjGetInt("$CURCFG::ask_Branch_Otoday",${ofmls:::ooMformRepaintGo},0);
  ObjDelete("$CURCFG::ask_Branch_Otoday");
; ESC - дату не меняем
  @@__init_RES==0? return(0): 0;
  Otoday=ConfigGet("$CURCFG::ask_Branch_Otoday:Otoday");
  c_branch=ConfigGet("$CURCFG::ask_Branch_Otoday:c_branch");
  brname=ConfigGet("$CURCFG::ask_Branch_Otoday:shname");
; раскрываем переменные окружения
  ConfigSet( "SECPATH", "::" );
  REPOUT=ConfigExpand( ConfigGet("$CURCFG::ask_Branch_Otoday:repdir") );
#}
;==========================================================
; параметры для просмотра/ печати файла
[ViewFile]
; для печати отчетов
enum __pri { low, norm, high }
enum __pri _pri=low
enum __pitch { 0, 1, 2, 3, 4 }
enum __pitch _pitch=3
enum __vpitch { 6, 8 }
enum __vpitch _vpitch=8
enum __timestamp { y, n }
enum __timestamp _timestamp=n
enum __remove { y, n }
enum __remove _remove=n
enum __landscape { no, 1, 2, 3, 4, srf }
enum __landscape _landscape=no
; для автоматической нумерации страниц
enum __pagenum { y, n }
enum __pagenum _pagenum=n
enum __mode { text, bin }
enum __mode _mode=bin
enum __duplex { y, n }
enum __duplex _duplex=n
char ncopies=
char indent=
char txt_width=
char qprt=@enq(\
#{","
   pri=@@pri_@_pri
   pitch=@@pitch@_pitch
   vpitch=@@vpitch@_vpitch
   tstamp=@{_timestamp%=y%*@timestamp}
   rem=@{_remove%=y%*@remove}
   remfile=@{_remove%=y%*rm -f @file}
   orient=@@landscape@_landscape
   mode=@@@_mode
   duplex=@{_duplex%=n%+@noduplex}
   title=@desc
   file=@FilePath
#})
char qsrf=@srf(\
#{","
   pri=@@pri_@_pri
   pitch=@@pitch@_pitch
   vpitch=@@vpitch@_vpitch
   tstamp=@{_timestamp%=y%*@tstamp}
   rem=@{_remove%=y%*@remove}
   remfile=@{_remove%=y%*rm -f @file}
   title=@desc
   file=@FilePath
#})
char qtxtsrf=@txt_srf(\
#{","
   pri=@@pri_@_pri
   pitch=@@pitch@_pitch
   vpitch=@@vpitch@_vpitch
   tstamp=@{_timestamp%=y%*@timestamp}
   rem=@{_remove%=y%*@remove}
   remfile=@{_remove%=y%*rm -f @file}
   orient=@@landscape@_landscape
   mode=@@@_mode
   duplex=@{_duplex%=n%+@noduplex}
   title=@desc
   file=@FilePath
#})
;----------------------------------------------------------
; для просмотра отчетов
char view_filter=\
/usr/bin/perl -p -e's/\f/${PAGE_HEADER%-----------}\n/' @src >@dst 2>&1
; было так
; cat @src|$FSDIR/bin/subst 's/\f/${PAGE_HEADER%-----------}\n/g' - >@dst 2>/dev/null
char view_srf=\
FSDEB= $FSDIR/bin/srf2txt -DTXT_WIDTH=@{txt_width%-80} @src @dst
; команда для печати файла из просмотра (выделенный кусок будет сохранен
; в файл, имя файла будет установлено в FilePath)
char view_qprt=${.:qprt}
;----------------------------------------------------------
; описание параметров просмотра/ печати внутри файла
[ViewSignature]
char header=#!:
char secpath=.;report::ViewFile
char t=txt_width
char l=_landscape
char p=_pitch
;============================================================
; шаблон описания конкретного отчета
[Report] default: ViewFile
main_class=CfgSectClass
desc=
desc_full=
; право на подготовку отчета
char obj_execute=PLACE_ALLRIGHT
; проверки доступности отчета
; право на доступ к отчету
char obj_read=PLACE_ALLRIGHT
; border ::= [<>=]DD.MM.YYYY  |  >DD.MM.YYYY<DD.MM.YYYY
; border date for report/document
; for example:
; border=>01.09.2008
; valid only after and including (!) 01.09.2008
; border=>12.07.2007<01.09.2008
; valid from 12.07.2007 until 01.09.2008
; левая граница применимости отчета (включительно)
date border0=31.12.1899
; правая граница применимости отчета
date border1=31.12.9999
; timely ::= {day|oday|nday|5-day|month|omonth|nmonth|quarter|year}[:<number>]
; timely ::= range(timely,...)
char timely=day
; pipe определения доступности отчета, вызывается _до_ установки
; переменных Rtoday, Date0, Date1, DayReport, FilePath и переменных из
; списка __export группы. Если этот pipe вернёт не 0, то отчет
; исключается из списка отчетов группы.
char availability_test=
long availability_test_RES=0
; конец проверок
;  file - may contain fmtdate format chars +
;         #U - current user short name
file=
command=
; long ReportEmptyForm
; - output or not empty form if there isn't any record in table
;   ABSENT or 1  -  output
;   0            -  no output
;   2            -  only begs/ends, no line
; long ReportSkipItems
;   1            -  skip line completely, only begs/ends
;----------------------------------------------------------
; Запрос параметров для отчета
; som_ask_obj полностью заданный объект типа DB_Form
char som_ask_obj=
; som_ask_resources порождаемый объект типа DB_Form с дополнительными ресурсами
char som_ask_resources=
; som_ask_screen порождаемый объект типа DB_Form с указанием экрана
char som_ask_screen=
; ask_form порождаемый объект типа DB_Form с указанием экрана
char ask_form=
;----------------------------------------------------------
; для печати отчетов
char viewer100=PrintFile
; для просмотра отчетов
char viewer=RepFileViewer
;----------------------------------------------------------
; для использования отчета самого по себе (без группы)
long Otoday=0
__init=Otoday=Otoday()
;----------------------------------------------------------
; run-time vars
date Date0=
long l_Date0=0
date Date1=
long l_Date1=0
; день ЗА (день, указанный при входе в группу отчетов)
date Rtoday=
; день НА (день, следующий за Rtoday)
date DayReport=
FilePath=
FormPath=
; порядковый номер отчета внутри диапазона дат
long r_ordnum=0
;----------------------------------------------------------
; Default values
; Существует ли файл с отчетом, значения: 0, 1 (или не 0)
;   (переменная д.б. описана здесь, иначе не видно в в акциях формы)
long result_ready=0
long result_test_RES=0
char result_test_MSG=
char result_test=\
#{
  result_test_RES=fileexist("@FilePath");
  result_test_MSG=@@result_test_RES ? "ГОТОВ" : "     ";
#}
boolean renewable=Yes
long renew_test_RES=0
renew_test=\
   renew_test_RES=@@renewable
;==========================================================
[EmptyReportSeparator] default: report::Report
char desc=--------------------------------------------
char desc_full=--------------------------------------------
long result_test_RES=1
char result_test=
char timely=any
char command=
char viewer=
char viewer100=
;==========================================================
[ReportL] default: Report
char qprt=@enq(pri=@pri_low,pitch=@pitch3,orient=@landscape1,timestamp=@tstamp,title=@desc,file=@FilePath,mode=@text)
;==================================================
[ReportState_]
result_test=\
#{
  result_test_RES=fileexist(@@FilePath);
  result_test_MSG=
    @@result_test_RES == 0? "     ":
    opdays_state(@@Date1,"state") != $DAY_STATE_CLOSED? "врем":
    opdays_time(@@Date1,"time_close") > stat(@@FilePath,"st_mtime")? "СТАРО":
    "ГОТОВ";
#}
;--------------------------------------------------
[ReportBalance_]
renew_test=\
   return( @@renewable && StdEnvGetVar("CurrUser.level") == 99 );
;--------------------------------------------------
[ReportState] default: Report,ReportState_
[ReportBalance] default: Report,ReportState_,ReportBalance_

;==========================================================
; печать ведомостей и реестров
;--------------------------------------------------
; хранилище текущего keystat'а
[Lists]
char group_list=
;--------------------------------------------------
; прототип группы реестров
[ListGroup] default: Group
long Otoday=0
char group_list=
const char __init=\
   Otoday=Otoday();\
   ConfigSetString( "report::Lists:group_list", @@group_list );
const long __init_RES=1
contents=
;--------------------------------------------------
; прототип реестра/ведомости
[XList] default: Report
const char result_test=
const long result_test_RES=0
char som_command=\
  CarbonCopySOM(@@FilePath,@@FormPath,\
    ConfigGetString("report::Lists:group_list"));
;--------------------------------------------------
[XQList] default: Report
const char result_test=
const long result_test_RES=0
; полное имя объекта типа DB_Ksquery, который используется для построения
; реестра
char ksquery=
char subobj=
; дополнительные ресурсы используемого объекта
char kswhere=
char ksorder=
char som_command=\
#{
  pk="parent_kstat="+ConfigGetString("report::Lists:group_list");
  @@subobj==""? 0:
    pk=@@pk+"."+@@subobj;
  @@kswhere==""? 0:
    pk=@@pk+";ks_where="+@@kswhere;
  @@ksorder==""? 0:
    pk=@@pk+";ks_order="+@@ksorder;
  ksq=Auth.obj_by_desc( "[DB_Ksquery](@pk)", @@ksquery, "dummy" );
  CarbonCopySOM( @@FilePath, @@FormPath, @@ksq );
  Auth.delete_obj_by_name(@@ksq);
#}
char som_command_ERR=\
#{
  -Auth.delete_obj_by_name(@@ksq);
  -unlink(@@FilePath);
#}
;--------------------------------------------------
; печать списка с определением полей в run-time
[XXList] default: Report
const char result_test=
const long result_test_RES=0
; дополнительные ресурсы используемого объекта
char kswhere=
char ksorder=
char som_command_BEFORE=
char som_command=\
#{
  ks_tpl="dbores::XXList_ksq_tpl";
  ExecutePipe(@@som_command_BEFORE);
  pk="parent_kstat="+ConfigGetString("report::Lists:group_list");
  @@kswhere==""? 0:
    pk=@@pk+";ks_where="+@@kswhere;
  @@ksorder==""? 0:
    pk=@@pk+";ks_order="+@@ksorder;
  ksq=Auth.obj_by_desc( "[DB_Kscurs](@pk)", @@ks_tpl, "dummy" );
  fields=CarbonCopySOM_Prep( @@FormPath, @@ksq );
; приходится править секцию конфига, т.к. ksq_list слишком длинная
  ConfigSetString("@{ks_tpl}:all_fields", @@fields);
  Auth.delete_obj_by_name(@@ksq);
  ksq=Auth.obj_by_desc("[DB_Ksquery](@pk)", @@ks_tpl, "dummy");
  CarbonCopySOM_Data( @@ksq );
  FilePath=tmpnam();
  CarbonCopySOM_Loop( @@FilePath );
  CarbonCopySOM_Term();
  Auth.delete_obj_by_name(@@ksq);
#}
char som_command_ERR=\
#{
  -Auth.delete_obj_by_name(@@ksq);
  -unlink(@@FilePath);
  CarbonCopySOM_Term();
#}
;--------------------------------------------------
; прототип экспорта в формате tobjload
[ExportTpl] default: XList
desc=Экспорт в формате tobjload
file=
char obj=
char names=
char som_command=\
#{
  print(">"+@@FilePath, "*"+@@obj+"\n");
  print(">>"+@@FilePath, "%"+@@names+"\n");
  DBO_Export(">>"+@@FilePath, "d|q<EMPTY>p\\", "|",
    ConfigGetString("report::Lists:group_list"),
    @@names );
#}

;==========================================================
; Стандаpтные об'екты
;==========================================================
; Ввод даты в пеpеменннную Otoday
[ask_Otoday]
main_class=KeyformClass
set.base_ks.obj_name=.
set.section=report::ask_Otoday
screen.scr_name=report:ask_Otoday.assk_screen
screen.scr_mode=add
edt_modes=i1
; ключ для Keystat
char key=
assk_screen=\
Введите дату для отчетов: %@fd3[##.##.####],Otoday:a,sqldate_funcs,,,y%\n
long Otoday=0
_default=Otoday=Otoday()
_insert=
_insert_vld=
;==================================================
; ввод филиала и даты
[ask_Branch_Otoday]
const char main_class=KeyformClass
char set.base_ks.obj_name=.
char set.section=$CURCFG::$CURSEC
char screen.scr_name=$CURCFG:$CURSEC.screen
char screen.scr_mode=add
char edt_modes=i1
;--------------------------------------------------
char screen=\
Филиал:{####}####################\n\
Дата  :##.##.####\n\
\
@p[0,8]%@fd10[####],c_branch:a,ustring_funcs,Код филиала,OSimpleChoice,y,keyform:BranchEdit,choice:branch_slct,record:c_branch,key:c_branch,where:c_branch!=${abbrs:::BRANCH_CONS},show:shname%\
@p[0,13]%@fp[@[20\,#]],@shname,xstring_funcs%\
@p[1,7]%@fd3[##.##.####],Otoday:a,sqldate_funcs,Дата отчетов,,y%
long Otoday=0
long c_branch=0
char shname=
char repdir=
_default=\
   Otoday=Otoday();\
   c_branch=0;\
   shname="";\
   repdir="";
_insert_vld=
_insert=\
   KsRetrieve( "Branch", "${CURCFG}", "${CURSEC}", "shname,repdir" );
[]

;==========================================================
; описания групп отчетов
;--------------------------------------------------
; отчеты по пpавам пользователей
[RightsGroup] GroupDay
char contents=\
#{","
  report::ПраваОтдельныхПользователей
  report::ПользователиСПравом
#}
;--------------------------------------------------
; отчеты на конец рабочего дня
[DayReports] Group
char contents=\
#{","
  report::Баланс
  report::ВедомостьОстатков
  report::ВедомостьОборотов
  repostat::NStatReportDay
EmptyReportSeparator
  report::ПроверкаОВП
  report::КрасноеСальдоН
;;EmptyReportSeparator
;;repmisc::КрасноеСальдоПоСчетам
;;repbal::РублБалансОбороты
;;repbal::РублБалансОборотыЗаМесяц
;;repbal::РублБалансОборотыЗаМесяцТыс
;;repbal::РублБалансОборотыЗаКвартал
;;repbal::РублБалансОборотыЗаГод
;;repbal::РублБалансОборотыЗаГодТыс
;;repbal::БалансОбороты
;;repbal::БалансОборотыЗаМесяц
;;repbal::БалансОборотыЗаМесяцТыс
;;repbal::БалансОборотыЗаКвартал
;;repbal::БалансОборотыЗаГод
;;repmisc::СводныйМемориальныйОрдер
;;repmisc::СводныйМемориальныйВалютныйОрдер
;;repmisc::СводныйОрдерПереоценки
;;repmisc::СводныйМемориальныйОрдерВнешний
;;repmisc::БухгалтерскийЖурнал
;;repbal::РублСостояниеСчетов
;;repbal::Приложение11
;;repbal::Приложение13
;;repbal::Приложение13_Месяц
;;repbal::Приложение13_Квартал
;;repbal::Приложение13_Год
;;repbal::Приложение14
;;repbal::СостояниеСчетов
;;repbal::Баланс_1порядка
;;repbal::БалансТысячи
;;repbal::РублБаланс
;;repbal::РублБаланс_1порядка
;;repbal::РублБалансТысячи
;;repbal::ПроверкаНа0_1
;;repbal::ПроверкаНа0_a
#}
;--------------------------------------------------
; отчеты по запросу
[Operint] GroupDay
char contents=\
#{","
  report::ВедомостьОстатковБС
  report::ВедомостьОборотовЗаПериод
  report::ВедомостьОборотовБС_ЗаПериод
  repostat::NStatReport
  repostat::NStatReportRange
  report::КорреспонденцияЛСЗаПериод
;;repmisc::СводныйМемориальныйОрдер
;;repmisc::СводныйМемориальныйВалютныйОрдер
;;repstat::РублВыпискаЗаПериод
;;repbal::ВедомостьРублОборотовБС
;;repturn::ДоходыРасходыЗаПериод
;;repmisc::ВсеДокументыПользователей
;;repmisc::ВсеОтложенныеДокументы
#}
;--------------------------------------------------
; новые отчеыт главного бухгалтера
[ChiefAccountantNewReport] Group
contents=\
#{","
repgrprd::ДоходыРасходыРубЗаПериод2
repgrprd::ДоходыРасходыРубЗаПериод2_DBF
repgrprd::ДоходыРасходыРВИЗаПериод2
repgrprd::Форма102_ЗаПериод2
repgrprd::Форма102_ФилЗаПериод2
repgrprd::Форма102_КликоФилОкрЗаПериод2
repgrprd::Форма102_КликоЦентрКопПоМесяц2
EmptyReportSeparator
repgrprd::ДоходыРасходыРВИ_БСФ_ЗаПериод2
repgrprd::ДоходыРасходыРВИ_БСФ_ЗаПериод2_DBF
repgrprd::ДоходыРасходыРВИ_ФБС_ЗаПериод2
EmptyReportSeparator
repgrprd::ДоходыРасходыРВИ_ФБ_ЗаПериод2
EmptyReportSeparator
repgrprd::ДоходыРасходыРВИ_КонсФилПоМесяц2
repgrprd::ДоходыРасходыРВИ_КонсЦентрПоМесяц2
EmptyReportSeparator
repgrprd::Форма102_ЗаМесяцC
repgrprd::Форма102_ЗаМесяцC_DBF
repgrprd::ДоходыРасходыРВИ_БСФ_ЗаМесяцС
repgrprd::ДоходыРасходыРВИ_БСФ_ЗаМесяцС_DBF
EmptyReportSeparator
repgrprd::Форма102_ГрСподЗаПериод2
repgrprd::Форма102_ГрЗаПериод2_ГрСподЗаПериод2
EmptyReportSeparator
repgrprd::ДоходыНалогРубЦентрЗаКвартал2
#}

;==================================================
; собственно отчёты
;==================================================
; балансы
;--------------------------------------------------
[Баланс] default: report::Report
char desc=Баланс по валютам
char desc_full=Баланс с названиями по валютам по текущему проекту
char file=d_ddmmyy.r05
char FormPath=rbal2s.lnf
char title=
char _pitch=2
char txt_width=120
char qprt=$qsrf
char view_filter=$view_srf
;--------------------------------------------------
char som_command=\
#{
  StdEnv.SomeVarsToColl(
    "BranchSelect.c_branch,BranchSelect.shname",
    CURRENT(), "" );
  title="БАЛАНС"+(@@BranchSelect.c_branch==$BRANCH_CONS? "":
    " по проекту @{BranchSelect.shname}");
  call( "$CURCFG::cmds:Баланс" );
#}
char som_command_ERR=-SQL drop table report;
;--------------------------------------------------
[cmds]
char Баланс=\
#{
  KernRptBankRests( @@Date1, @@Date1,
    "", "ad.naccnt", "g",
    @@BranchSelect.c_branch==$BRANCH_CONS? "":
      "ad.c_branch in(select c_branch from branches_cons_dep "+
        "where c_cons=@{BranchSelect.c_branch})",
    $KERN_RPT_CURR, $KERN_RPT_OUT, $KERN_RPT_TURN_NO_OP, "report" );
  CarbonCopy(
    "select r.naccnt accnt,r.debit,r.credit,"+
      "npl.name pl2_name,ci.abbr curr "+
    "from report r "+
      "join npl_accnt2 npl on npl.naccnt=r.naccnt "+
      "join curr_info ci on ci.c_curr=r.c_curr "+
    "order by r.c_curr,r.naccnt" );
  SQL drop table report;
#}

;==================================================
; ведомости счетов
;--------------------------------------------------
[ВедомостьОстатков] default: report::Report
char desc=Ведомость остатков за день
char desc_full=\
#{
  Ведомость остатков в валюте и в рублёвом пересчёте
  с названиями
  по всем лицевым счетам
  с ненулевыми остатками
  на конец дня
  по текущему проекту
#}
char file=d_ddmmyy.r13
char FormPath=rclient2s.lnf
char title=
;--------------------------------------------------
char where=
char output_slct=,\
#{
  ad.ncurracc curracc,an.name,pl2.name pl2_name,
  br.shname tot_name
#}
char output_from=$ \
#{
  join accnts_name an on
    an.c_accnt=r.c_accnt and
      '@Date1' between an.prev_change and an.next_change
  join npl_accnt2 pl2 on pl2.naccnt=ad.naccnt
#}
char post_process=$CURCFG::cmds:ВедомостьОстатков_delete_all0
char som_command=\
#{
  StdEnv.SomeVarsToColl(
    "BranchSelect.c_branch,BranchSelect.shname",
    CURRENT(), "" );
  title="Ведомость остатков"+(@@BranchSelect.c_branch==$BRANCH_CONS? "":
    " по проекту @{BranchSelect.shname}");
  call( "$CURCFG::cmds:ВедомостьОстатков" );
#}
char som_command_ERR=-SQL drop table report;
;==================================================
[ВедомостьОстатковБС] default: ВедомостьОстатков
char desc=Ведомость остатков по БС
char desc_full=\
#{
  Ведомость остатков в валюте и в рублёвом пересчёте
  с названиями
  по лицевым счетам указанного балансового счета 2-ого порядка
  с ненулевыми остатками
  на конец указанного дня
  по текущему проекту
#}
char file=r_#U.r41
char som_ask_resources=$CURCFG::acc2s_date
long accnt2_0=0
long accnt2_1=0
long accnt2_2=0
long accnt2_3=0
long accnt2_4=0
;--------------------------------------------------
char where=\
#{
  ad.naccnt in(@accnt2_0,@accnt2_1,@accnt2_2,@accnt2_3,@accnt2_4)
#}
char output_slct=
char som_command=\
#{
  StdEnv.SomeVarsToColl(
    "BranchSelect.c_branch,BranchSelect.shname",
    CURRENT(), "" );
  title="Ведомость остатков по БС"+
    (@@BranchSelect.c_branch==$BRANCH_CONS? "":
      " по проекту @{BranchSelect.shname}");
  output_slct=",ad.ncurracc curracc,an.name,pl2.name pl2_name,"+
    "'@{BranchSelect.shname}/@accnt2_0"+
      (@@accnt2_1==0? "": ",@accnt2_1")+
      (@@accnt2_2==0? "": ",@accnt2_2")+
      (@@accnt2_3==0? "": ",@accnt2_3")+
      (@@accnt2_4==0? "": ",@accnt2_4")+
      "' tot_name";
  call( "$CURCFG::cmds:ВедомостьОстатков" );
#}
;==================================================
[ВедомостьОборотов] default: report::Report
char desc=Ведомость оборотов за день
char desc_full=\
#{
  Ведомость оборотов по валютам
  с названиями
  по всем лицевым счетам
  с ненулевыми остатками или оборотами
  за день
  по текущему проекту
#}
char file=d_ddmmyy.r29
char FormPath=rbal5s.lnf
char title=
;--------------------------------------------------
char where=
char output_slct=,\
#{
  ad.ncurracc curracc,an.name,pl2.name pl2_name,
  br.shname tot_name
#}
char output_from=$ \
#{
  join accnts_name an on
    an.c_accnt=r.c_accnt and an.next_change=r.delete_day
  join npl_accnt2 pl2 on pl2.naccnt=ad.naccnt
#}
char post_process=$CURCFG::cmds:ВедомостьОборотов_delete_all0
char som_command=\
#{
  StdEnv.SomeVarsToColl(
    "BranchSelect.c_branch,BranchSelect.shname",
    CURRENT(), "" );
  title="Ведомость оборотов"+(@@BranchSelect.c_branch==$BRANCH_CONS? "":
    " по проекту @{BranchSelect.shname}");
  call( "$CURCFG::cmds:ВедомостьОборотов" );
#}
char som_command_ERR=-SQL drop table report;
;==================================================
[ВедомостьОборотовЗаПериод] default: ВедомостьОборотов
char desc=Ведомость оборотов за период
char desc_full=\
#{
  Ведомость оборотов по валютам
  с названиями
  по всем лицевым счетам
  с ненулевыми остатками или оборотами
  за указанный период
  по текущему проекту
#}
char file=r_#U.r29
char ask_form=$CURCFG:ask.range
;==================================================
[ВедомостьОборотовБС_ЗаПериод] default: ВедомостьОборотов
char desc=Ведомость оборотов по БС
char desc_full=\
#{
  Ведомость оборотов по валютам
  с названиями
  по лицевым счетам указанного балансового счета 2-ого порядка
  с ненулевыми остатками или оборотами
  за указанный период
  по текущему проекту
#}
char file=r_#U.r40
char som_ask_resources=$CURCFG::acc2s_range
long accnt2_0=0
long accnt2_1=0
long accnt2_2=0
;--------------------------------------------------
char where=ad.naccnt in(@accnt2_0,@accnt2_1,@accnt2_2)
char output_slct=
char som_command=\
#{
  StdEnv.SomeVarsToColl(
    "BranchSelect.c_branch,BranchSelect.shname",
    CURRENT(), "" );
  title="Ведомость оборотов по БС"+
    (@@BranchSelect.c_branch==$BRANCH_CONS? "":
      " по проекту @{BranchSelect.shname}");
  output_slct=",ad.ncurracc curracc,an.name,pl2.name pl2_name,"+
    "'@{BranchSelect.shname}/@accnt2_0"+
      (@@accnt2_1==0? "": ",@accnt2_1")+
      (@@accnt2_2==0? "": ",@accnt2_2")+
      "' tot_name";
  call( "$CURCFG::cmds:ВедомостьОборотов" );
#}
;==================================================
[cmds]
; вх: where, post_process, output_slct, output_from
char ВедомостьОстатков=\
#{
  KernRptBankRests( @@Date1, @@Date1,
    "", "t.c_accnt", "g",
    joinstr( " and ",
      VcolExpand( @@where ),
      @@BranchSelect.c_branch==$BRANCH_CONS? "":
        "ad.c_branch in(select c_branch from branches_cons_dep "+
          "where c_cons=@{BranchSelect.c_branch})" ),
    $KERN_RPT_CURR_RBL, $KERN_RPT_OUT, $KERN_RPT_TURN_LAST_OP,
    "report" );
; удаляем нулевые
  @@post_process==""? 0:
    call( @@post_process );
; выводим отчет
  CarbonCopy(
    "select r.*,"+
      "ci.abbr curr,"+
      "ad.naccnt accnt"+
      VcolExpand( @@output_slct )+" "+
    "from report r "+
      "join curr_info ci on ci.c_curr=r.c_curr "+
      "join accnts_def ad on ad.c_accnt=r.c_accnt "+
      "join branches br on br.c_branch=ad.c_branch "+
      VcolExpand( @@output_from )+" "+
    "order by ad.naccnt,br.ndep,ad.nsymbf2,ad.nsubacc,r.c_curr" );
  SQL drop table report;
#}
char ВедомостьОстатков_delete_all0=\
#{
  SQL delete from report
      where debit=0 and credit=0 and
        rdebit=0 and rcredit=0;
#}
;--------------------------------------------------
; вх: where, post_process, output_slct, output_from
char ВедомостьОборотов=\
#{
; готовим остатки и обороты
  try("$CURCFG::cmds:prep_bank_turnovers","", "",
    joinstr( " and ",
      VcolExpand( @@where ),
      @@BranchSelect.c_branch==$BRANCH_CONS? "":
        "ad.c_branch in(select c_branch from branches_cons_dep "+
          "where c_cons=@{BranchSelect.c_branch})" ),
    $KERN_RPT_CURR );
; удаляем нулевые
  @@post_process==""? 0:
    call( @@post_process );
; выводим отчет
  CarbonCopy(
    "select r.*,"+
      "ci.abbr curr,"+
      "ad.naccnt accnt"+
      VcolExpand( @@output_slct )+" "+
    "from report r "+
      "join curr_info ci on ci.c_curr=r.c_curr "+
      "join accnts_def ad on ad.c_accnt=r.c_accnt "+
      "join branches br on br.c_branch=ad.c_branch "+
      VcolExpand( @@output_from )+" "+
    "order by r.c_curr,ad.naccnt,br.ndep,ad.nsymbf2,ad.nsubacc,"+
      "r.delete_day" );
  SQL drop table report;
#}
char ВедомостьОборотов_delete_all0=\
#{
  SQL delete from report
      where debit1=0 and credit1=0 and
        debit_to=0 and credit_to=0 and
        debit2=0 and credit2=0;
#}
;--------------------------------------------------
; подготовить таблицу оборотов по счетам/валютам,
; похоже на KernRptBankTurnovers2/KernRptBankRturnovers2
; вх: Date0..Date1 - период отчета;
;     from/where - дополнительные таблицы и условия (from должен
;     начинаться с ' ');
;     kern_rpt - $KERN_RPT_CURR_RBL/KERN_RPT_CURR;
; вых:таблица report(c_accnt,c_curr,delete_day,
;       debit1,credit1,debit_to,credit_to,debit2,credit2);
char prep_bank_turnovers_parms=from,where,kern_rpt
char prep_bank_turnovers=\
#{
  local("all_from");
  all_from=
    "join accnts_multi am on am.c_accnt=t.c_accnt and "+
      "am.c_curr=t.c_curr and "+
      "t.op_day between am.open_day and ad.delete_day"+
    @@from;
  KernRptBankRests( @@Date0, @@Date0,
    @@all_from, "t.c_accnt,am.delete_day", "gg", @@where,
    @@kern_rpt, $KERN_RPT_IN, $KERN_RPT_TURN_NO_OP, "rest1" );
  KernRptBankRests( @@Date0, @@Date1,
    @@all_from, "t.c_accnt,am.delete_day", "gg", @@where,
    @@kern_rpt, $KERN_RPT_TO, $KERN_RPT_TURN_NO_OP, "turn" );
  KernRptBankRests( @@Date1, @@Date1,
    @@all_from, "t.c_accnt,am.delete_day", "gg", @@where,
    @@kern_rpt, $KERN_RPT_OUT, $KERN_RPT_TURN_NO_OP, "rest2" );
; объединяем
  local("sumpref");
  sumpref=@@kern_rpt==$KERN_RPT_CURR_RBL? "r": "";
  KernTransposeTable3( "c_accnt,c_curr,delete_day", "report",
    "rest1 b1",
      "b1.@{sumpref}debit debit1,b1.@{sumpref}credit credit1",
      "", "0,0",
    "turn t",
      "t.@{sumpref}debit debit_to,t.@{sumpref}credit credit_to",
      "", "0,0",
    "rest2 b2",
      "b2.@{sumpref}debit debit2,b2.@{sumpref}credit credit2",
      "", "0,0" );
  SQL drop table rest1;
  SQL drop table turn;
  SQL drop table rest2;
#}
char prep_bank_turnovers_ERR=\
#{
 -SQL drop table rest1;
 -SQL drop table turn;
 -SQL drop table rest2;
#}

;==================================================
; обороты счетов
;--------------------------------------------------
[КорреспонденцияЛСЗаПериод] default: report::Report
char desc=Корреспонденция счетов за период
char desc_full=\
#{
  Счета, корреспондирующие с указанными лицевыми счетами, и
  суммы оборотов с этими счетами
  с подитогами по балансовому счету
  за указанный период
  по текущему проекту
#}
char file=r_#U.r50
char som_ask_resources=$CURCFG::accs_range
long c_accnt_0=0
long c_accnt_1=0
long c_accnt_2=0
long c_accnt_3=0
long c_accnt_4=0
char FormPath=racctrn8.lnf
;--------------------------------------------------
char where=[c_accnt1] in(\
#{
  @c_accnt_0,@c_accnt_1,@c_accnt_2,@c_accnt_3,@c_accnt_4
#})
char from=
char slct=[c_accnt1] c_accnt1,[c_accnt2] c_accnt2,p.c_curr
char group=ggg
char insflds=c_accnt1,c_accnt2,c_curr
char som_command=\
#{
  StdEnv.SomeVarsToColl( "BranchSelect.c_branch", CURRENT(), "" );
; готовим обороты
  try("$CURCFG::cmds:prep_bank_provs","",
    joinstr( " and ",
      VcolExpand( @@where ),
      @@BranchSelect.c_branch==$BRANCH_CONS? "":
        "ad.c_branch in(select c_branch from branches_cons_dep "+
          "where c_cons=@{BranchSelect.c_branch})" ));
; выводим
  CarbonCopy(
    "select ad1.naccnt accnt1,ad1.ncurracc curracc1,n1.name name1,"+
      "ad2.naccnt accnt2,ad2.ncurracc curracc2,n2.name name2,"+
      "pl2.name pl2_name2,"+ 
      "ci.abbr curr,"+
      "r.debit,r.credit "+
    "from report r "+
      "join accnts_def ad1 on ad1.c_accnt=r.c_accnt1 "+
      "join branches br1 on br1.c_branch=ad1.c_branch "+
      "join accnts_def ad2 on ad2.c_accnt=r.c_accnt2 "+
      "join branches br2 on br2.c_branch=ad2.c_branch "+
      "join accnts_name n1 on n1.c_accnt=ad1.c_accnt and "+
        "n1.next_change=ad1.delete_day "+
      "join accnts_name n2 on n2.c_accnt=ad2.c_accnt and "+
        "n2.next_change=ad2.delete_day "+
      "join npl_accnt2 pl2 on pl2.naccnt=ad2.naccnt "+
      "join curr_info ci on ci.c_curr=r.c_curr "+
    "order by "+
      "ad1.naccnt,br1.ndep,ad1.nsymbf2,ad1.nsubacc,"+
      "ad2.naccnt,br2.ndep,ad2.nsymbf2,ad2.nsubacc,"+
      "r.c_curr" );
  SQL drop table report;
#}
char som_command_ERR=-SQL drop table report;
;--------------------------------------------------
[cmds]
; подготовить таблицу оборотов в корреспонденции со счетами,
; похоже на KernRptBankProvs(KERN_RPT_CURR),
; его самого нельзя использовать из-за плохой оптимизации view
; вх: Date0..Date1 - период отчета;
;     from/flds/group/where - дополнительные таблицы, поля и их
;       группировка, условия;
;     insflds - список полей в итоговой таблице (альясы полей flds);
; вых:таблица report(@insflds,debit,credit);
char prep_bank_provs_parms=where
char prep_bank_provs=\
#{
; оборот дебет
  KernRptBankProvs2( @@Date0, @@Date1,
    @@from,
    @@slct+",[isum] debit",
    @@group+"s",
    @@where,
    $KERN_RPT_CURR+$KERN_RPT_SKIP_CREDIT, "rdeb" );
; оборот кредит
  KernRptBankProvs2( @@Date0, @@Date1,
    @@from,
    @@slct+",-([isum]) credit",
    @@group+"s",
    @@where,
    $KERN_RPT_CURR+$KERN_RPT_SKIP_DEBIT, "rcre" );
; объединяем
  KernTransposeTable2( @@insflds, "report",
    "rdeb rd", "debit" , "", "0",
    "rcre rc", "credit", "", "0" );
  SQL drop table rdeb;
  SQL drop table rcre;
#}
char prep_bank_provs_ERR=\
#{
 -SQL drop table rdeb;
 -SQL drop table rcre;
#}

;==================================================
; отчеты для закрытия дня
;--------------------------------------------------
[ПроверкаОВП] default: report::Report
char desc=Проверка ОВП
char desc_full=Проверка открытой валютной позиции на 0
char file=d-ddmmyy.r30
;--------------------------------------------------
long old_conv=0
long nlines=0
char command=\
#{
  old_conv=KernEnvGetLong( "conv" );
  KernEnvSetLong( "conv", $KERN_CONV_ONLY );
; ОВП - счета конвертации
  KernRptBankRests( @@Date1, @@Date1,
    "", "t.c_accnt", "g", "",
    $KERN_RPT_CURR_RBL, $KERN_RPT_OUT, $KERN_RPT_TURN_NO_OP, "report" );
  KernEnvSetLong( "conv", @@old_conv );
; итого
  SQL create temp table reptot(c_accnt int,
      rdebit money,rcredit money) with no log;
  SQL insert into reptot(c_accnt,rdebit,rcredit)
      select c_accnt,sum(rdebit),sum(rcredit)
      from report group by 1;
; выводим отчет, если не совпадает
  print( ">"+@@FilePath, @@desc+" за "+rfmtdate(@@Date1,"dd.mm.yyyy")+"\n" );
  SQL_SimpleReport( ">>"+@@FilePath, "Счетов позиции нет\n",
    "Счет:s20,Сальдо:m20+,"+
    "Дебет (рубл.пересчет):m20+,Кредит (рубл.пересчет):m20+",
    "select ad.ncurracc curracc,r.rcredit-r.rdebit,"+
      "r.rdebit,r.rcredit "+
    "from reptot r,accnts_def ad "+
    "where ad.c_accnt=r.c_accnt "+
    "order by ad.naccnt,ad.nsubacc" );
  print( ">>"+@@FilePath, "Расшифровка\n" );
  print( ">>"+@@FilePath, "(по рублям не учитывается переоценка)\n" );
  SQL_SimpleReport( ">>"+@@FilePath, "Счетов позиции нет\n",
     "Счет:s20,Валюта:s,Дебет (вал):m20+,Кредит (вал):m20+,"+
     "Дебет (рубл.пересчет):m20+,Кредит (рубл.пересчет):m20+",
     "select ad.ncurracc,ci.abbr,r.debit,r.credit,"+
       "r.rdebit,r.rcredit "+
     "from report r "+
       "join accnts_def ad on ad.c_accnt=r.c_accnt "+
       "join curr_info ci on ci.c_curr=r.c_curr "+
     "order by ad.naccnt,ad.nsubacc,r.c_curr" );
; проверяем на 0
  SQL select count(*) into ?nlines from reptot where rdebit!=rcredit;
  SQL drop table reptot;
  SQL drop table report;
  @@Human==0 && @@nlines==0?
    return(-1): 0;
#}
char command_ERR=\
#{
 -KernEnvSetLong( "conv", @@old_conv );
 -SQL drop table report;
 -SQL drop table reptot;
#}
char command_EOK=Message( "status_line", -1, "Позиция нулевая" );
;--------------------------------------------------
[КрасноеСальдоН] default: report::Report
char desc='Красное сальдо' по новому плану
char desc_full="Красное сальдо" по счетам нового плана
char file=d-ddmmyy.r17
char FormPath=rbalredu.lnf
char comment=
;--------------------------------------------------
long Human=1
long nlines=0
char command=\
#{
; prepare rest
  KernRptBankRests( @@Date1, @@Date1,
    "", "ad.nactpass type,t.c_accnt", "gg", "",
    $KERN_RPT_CURR_RBL, $KERN_RPT_OUT, $KERN_RPT_TURN_NO_OP, "report" );
; remove not "red"
  SQL delete from report
      where not(type=$ACCNT_TYPE_ACTIVE and
          debit<credit and rdebit<rcredit or
        type=$ACCNT_TYPE_PASSIVE and
          debit>credit and rdebit>rcredit);
; выводим отчет
  CarbonCopy(
    "select ad.ncurracc curracc,ta.abbr type_ap,"+
      "ci.abbr curr,"+
      "r.debit,r.credit,"+
      "an.name "+
    "from report r "+
      "join accnts_def ad on ad.c_accnt=r.c_accnt "+
      "join abbrs ta on ta.type=r.type "+
      "join curr_info ci on ci.c_curr=r.c_curr "+
      "join accnts_name an on an.c_accnt=r.c_accnt and "+
        "'@Date1' between an.prev_change and an.next_change "+
    "order by ad.ncurracc,r.c_curr" );
; проверяем на 0
  SQL select count(*) into ?nlines from report;
  SQL drop table report;
  @@Human==0 && @@nlines==0?
    return(-1): 0;
#}
char command_ERR=-SQL drop table report;
char command_EOK=\
#{
  Message( "status_line", -1, "Нет 'красного' сальдо" );
#}

;==================================================
; отчеты по правам
;--------------------------------------------------
[ПраваОтдельныхПользователей] default: report::Report
char desc=Права отдельных пользователей
char file=/tmp/user_rights_rep
char FormPath=rusers2.lnf
char _pitch=0
char som_ask_resources=$CURCFG::users
long c_user_0=0
long c_user_1=0
long c_user_2=0
long c_user_3=0
long c_user_4=0
char command=\
#{
  CarbonCopy(
    "select u.name u_name,g.name g_name,br.name right,"+
      "u.level,u.open_day,u.delete_day "+
    "from users u "+
      "join groups g on g.c_group=u.c_group "+
      "left join(grouprights gr "+
        "join baserights_def br on br.c_base_right=gr.c_base_right) "+
      "on gr.c_group=g.c_group "+
    "where u.c_user in (@c_user_0,@c_user_1,@c_user_2,@c_user_3,"+
      "@c_user_4) and '@Date1' between u.open_day and u.delete_day "+
    "order by 1" );
#}
;--------------------------------------------------
[ПользователиСПравом] default: report::Report
char desc=Пользователи с правом
char file=/tmp/right_user_rep
char FormPath=rusers2s.lnf
char _pitch=0
char txt_width=78
char qprt=$qsrf
char view_filter=$view_srf
char som_ask_resources=$CURCFG::rights
long c_right_0=0
long c_right_1=0
long c_right_2=0
long c_right_3=0
long c_right_4=0
char command=\
#{
  SQL create temp table report
      ( c_base_right int not null,
        c_user int not null,
        roles varchar(100)
      ) with no log;
  SQL insert into report(c_base_right,c_user,roles)
      select br.c_base_right,u.c_user,commajoin(sra.rolename)
      from baserights_def br
        join grouprights gr on gr.c_base_right=br.c_base_right
        join groups g on g.c_group=gr.c_group
        join users u on u.c_group=g.c_group
        join sysroleauth sra on sra.grantee=u.shname
      where br.c_base_right in(@c_right_0,@c_right_1,@c_right_2,
        @c_right_3,@c_right_4) and
        ?Date1 between u.open_day and u.delete_day
      group by 1,2;
  CarbonCopy(
    "select u.name||' ('||rtrim(u.shname)||')' u_name,"+
      "g.name g_name,u.level,r.roles,"+
      "br.name right "+
    "from report r "+
      "join baserights_def br on br.c_base_right=r.c_base_right "+
      "join users u on u.c_user=r.c_user "+
      "join groups g on g.c_group=u.c_group "+
    "order by u_name,right" );
  SQL drop table report;
#}
char command_ERR=-SQL drop table report;

;==================================================
; запросы для отчетов
;--------------------------------------------------
; шаблон ввода полей даты
[]
template char UDateInput=\
#{
  %@fd3[##.##.####],$name:e,sqldate_funcs,$prompt,,y%
#}
char DateInput=\
#{
за $UDateInput(name=Date1,prompt=Введите дату)
#}
char RangeInput=\
#{
с $UDateInput(name=Date0,prompt=Начало периода)
по $UDateInput(name=Date1,prompt=Окончание периода)
#}
[ask]
; дата
char date=$DateInput
; период
char range=$RangeInput
;==================================================
; ресурсы для SOM-запросов
;--------------------------------------------------
; то, что устанавливается в Си-коде
template [som_c_resource_tpl]
const char main_class=DB_Form
char parent_kstat=
const char scr_mode=edit
const char edt_modes=u1!p
;--------------------------------------------------
template [som_resource_tpl]
char scr_name=$CURCFG:som_ask.$CURSEC
; список полей, участвующих в запросе (по-умолчанию - все поля экрана)
char fields=
; дополнительные акции
char add_acts=\
#{
  *(edit,dispatch,"Заново#hЗаново#w0#P1"): PGDN
  { pipe=doopn{opn=default};
         set_chgflag;
         to_first_field
  };
  *(edit,exit,"Выход#hВыход#w9#P1"): ESC;
#}
;--------------------------------------------------
; пользователи
[users] default: som_resource_tpl
char fields=c_user_0,c_user_1,c_user_2,c_user_3,c_user_4
char foreigns=\
#{
  User0(dbores::Users):c_user_0(c_user);
  User1(dbores::Users):c_user_1(c_user);
  User2(dbores::Users):c_user_2(c_user);
  User3(dbores::Users):c_user_3(c_user);
  User4(dbores::Users):c_user_4(c_user);
#}
;--------------------------------------------------
; базовые права
[rights] default: som_resource_tpl
char fields=c_right_0,c_right_1,c_right_2,c_right_3,c_right_4
char foreigns=\
#{
  Right0(dbores::BaseRightsDef):c_right_0(c_base_right);
  Right1(dbores::BaseRightsDef):c_right_1(c_base_right);
  Right2(dbores::BaseRightsDef):c_right_2(c_base_right);
  Right3(dbores::BaseRightsDef):c_right_3(c_base_right);
  Right4(dbores::BaseRightsDef):c_right_4(c_base_right);
#}
;--------------------------------------------------
; балансовые счета и дата
[acc2s_date] default: som_resource_tpl
char fields=accnt2_0,accnt2_1,accnt2_2,accnt2_3,accnt2_4,Date0,Date1
char ks_defaults=Date0:@today;Date1:@today;
char foreigns=\
#{
  NPL0(dbores::NPl_accnt2):accnt2_0(naccnt);
  NPL1(dbores::NPl_accnt2):accnt2_1(naccnt);
  NPL2(dbores::NPl_accnt2):accnt2_2(naccnt);
  NPL3(dbores::NPl_accnt2):accnt2_3(naccnt);
  NPL4(dbores::NPl_accnt2):accnt2_4(naccnt);
#}
;--------------------------------------------------
; балансовые счета и период
[acc2s_range] default: som_resource_tpl
char fields=accnt2_0,accnt2_1,accnt2_2,Date0,Date1
char ks_defaults=Date0:@today;Date1:@today;
char foreigns=\
#{
  NPL0(dbores::NPl_accnt2):accnt2_0(naccnt);
  NPL1(dbores::NPl_accnt2):accnt2_1(naccnt);
  NPL2(dbores::NPl_accnt2):accnt2_2(naccnt);
#}
;--------------------------------------------------
; лицевые счета и период
[accs_range] default: som_resource_tpl
char fields=\
#{
  c_accnt_0,c_accnt_1,c_accnt_2,c_accnt_3,c_accnt_4,
  Date0,Date1
#}
char ks_defaults=Date0:@today;Date1:@today;
char foreigns=\
#{
  Accnt0(dbores::Accnt):c_accnt_0(c_accnt);
  Accnt1(dbores::Accnt):c_accnt_1(c_accnt);
  Accnt2(dbores::Accnt):c_accnt_2(c_accnt);
  Accnt3(dbores::Accnt):c_accnt_3(c_accnt);
  Accnt4(dbores::Accnt):c_accnt_4(c_accnt);
#}
;==================================================
; экраны для SOM-запросов
[som_ask]
;--------------------------------------------------
; пользователи
char users=\
#{!"\n"
{%@fd6[@[20\,#]],c_user_0:e,ustring_funcs,Пользователь,RfcChoice,y,record:User0.name,resources:dbores::User_select,show:User0.shname%} (%@fp[######],@User0.shname,xstring_funcs%)
{%@fd6[@[20\,#]],c_user_1:e,ustring_funcs,Пользователь,RfcChoice,,record:User1.name,resources:dbores::User_select,show:User1.shname%} (%@fp[######],@User1.shname,xstring_funcs%)
{%@fd6[@[20\,#]],c_user_2:e,ustring_funcs,Пользователь,RfcChoice,,record:User2.name,resources:dbores::User_select,show:User2.shname%} (%@fp[######],@User2.shname,xstring_funcs%)
{%@fd6[@[20\,#]],c_user_3:e,ustring_funcs,Пользователь,RfcChoice,,record:User3.name,resources:dbores::User_select,show:User3.shname%} (%@fp[######],@User3.shname,xstring_funcs%)
{%@fd6[@[20\,#]],c_user_4:e,ustring_funcs,Пользователь,RfcChoice,,record:User4.name,resources:dbores::User_select,show:User4.shname%} (%@fp[######],@User4.shname,xstring_funcs%)
#}
;--------------------------------------------------
; базовые права
char rights=\
#{!"\n"
{%@fd5w40[@[160\,#]],c_right_0:e,ustring_funcs,Базовое право,RfcChoice,y,record:Right0.name,resources:dbores::Name40_select%}
{%@fd5w40[@[160\,#]],c_right_1:e,ustring_funcs,Базовое право,RfcChoice,,record:Right1.name,resources:dbores::Name40_select%}
{%@fd5w40[@[160\,#]],c_right_2:e,ustring_funcs,Базовое право,RfcChoice,,record:Right2.name,resources:dbores::Name40_select%}
{%@fd5w40[@[160\,#]],c_right_3:e,ustring_funcs,Базовое право,RfcChoice,,record:Right3.name,resources:dbores::Name40_select%}
{%@fd5w40[@[160\,#]],c_right_4:e,ustring_funcs,Базовое право,RfcChoice,,record:Right4.name,resources:dbores::Name40_select%}
#}
;--------------------------------------------------
; балансовые счета и дата
char acc2s_date=\
#{!"\n"
Введите балансовые счета
{%@fd6[#####],accnt2_0:e,ustring_funcs,Счет 2го порядка,RfcChoice,y,record:NPL0.naccnt,resources:dbores::NAccnt_select,show:NPL0.name%} %@fp[@[40\,#]],@NPL0.name,xstring_funcs%
{%@fd6[#####],accnt2_1:e,ustring_funcs,Счет 2го порядка,RfcChoice,,record:NPL1.naccnt,resources:dbores::NAccnt_select,show:NPL1.name%} %@fp[@[40\,#]],@NPL1.name,xstring_funcs%
{%@fd6[#####],accnt2_2:e,ustring_funcs,Счет 2го порядка,RfcChoice,,record:NPL2.naccnt,resources:dbores::NAccnt_select,show:NPL2.name%} %@fp[@[40\,#]],@NPL2.name,xstring_funcs%
{%@fd6[#####],accnt2_3:e,ustring_funcs,Счет 2го порядка,RfcChoice,,record:NPL3.naccnt,resources:dbores::NAccnt_select,show:NPL3.name%} %@fp[@[40\,#]],@NPL3.name,xstring_funcs%
{%@fd6[#####],accnt2_4:e,ustring_funcs,Счет 2го порядка,RfcChoice,,record:NPL4.naccnt,resources:dbores::NAccnt_select,show:NPL4.name%} %@fp[@[40\,#]],@NPL4.name,xstring_funcs%
$DateInput
#}
;--------------------------------------------------
; балансовые счета и период
char acc2s_range=\
#{!"\n"
Введите балансовые счета
{%@fd6[#####],accnt2_0:e,ustring_funcs,Счет 2го порядка,RfcChoice,y,record:NPL0.naccnt,resources:dbores::NAccnt_select,show:NPL0.name%} %@fp[@[40\,#]],@NPL0.name,xstring_funcs%
{%@fd6[#####],accnt2_1:e,ustring_funcs,Счет 2го порядка,RfcChoice,,record:NPL1.naccnt,resources:dbores::NAccnt_select,show:NPL1.name%} %@fp[@[40\,#]],@NPL1.name,xstring_funcs%
{%@fd6[#####],accnt2_2:e,ustring_funcs,Счет 2го порядка,RfcChoice,,record:NPL2.naccnt,resources:dbores::NAccnt_select,show:NPL2.name%} %@fp[@[40\,#]],@NPL2.name,xstring_funcs%
$RangeInput
#}
;--------------------------------------------------
; лицевые счета и период
char accs_range=FORM(12,50)\
#{!"\n"
Счета
{%@fd6[@[20\,#]],c_accnt_0:e,ustring_funcs,Счёт,RfcChoice,y,record:Accnt0.ncurracc,resources:dbores::Accnt_select,show:Accnt0.name%}
%@fpd1[@[50\,#]],@Accnt0.name,xstring_funcs,Название счёта%
{%@fd6[@[20\,#]],c_accnt_1:e,ustring_funcs,Счёт,RfcChoice,,record:Accnt1.ncurracc,resources:dbores::Accnt_select,show:Accnt1.name%}
%@fpd1[@[50\,#]],@Accnt1.name,xstring_funcs,Название счёта%
{%@fd6[@[20\,#]],c_accnt_2:e,ustring_funcs,Счёт,RfcChoice,,record:Accnt2.ncurracc,resources:dbores::Accnt_select,show:Accnt2.name%}
%@fpd1[@[50\,#]],@Accnt2.name,xstring_funcs,Название счёта%
{%@fd6[@[20\,#]],c_accnt_3:e,ustring_funcs,Счёт,RfcChoice,,record:Accnt3.ncurracc,resources:dbores::Accnt_select,show:Accnt3.name%}
%@fpd1[@[50\,#]],@Accnt3.name,xstring_funcs,Название счёта%
{%@fd6[@[20\,#]],c_accnt_4:e,ustring_funcs,Счёт,RfcChoice,,record:Accnt4.ncurracc,resources:dbores::Accnt_select,show:Accnt4.name%}
%@fpd1[@[50\,#]],@Accnt4.name,xstring_funcs,Название счёта%
$RangeInput
#}
;--------------------------------------------------
; сумма, валюта и период
char sum_curr_range=\
#{!"\n"
Сумма:%@fd3[@[20\,#]],isum:e,sqlmoney_funcs,Сумма документа,,>\,%
Валюта:{%@fd5[#####],c_curr:e,ustring_funcs,Валюта\, пусто - все валюты,RfcChoice,U,record:Curr.abbr,resources:dbores::Curr_select%}
$RangeInput
#}
;--------------------------------------------------
; диапазон сумм, валюта и период
char sums_curr_range=\
#{!"\n"
Сумма между %@fd3[@[20\,#]],isum0:e,sqlmoney_funcs,Минимальная сумма,,>\,% и %@fd3[@[20\,#]],isum1:e,sqlmoney_funcs,Максимальная сумма,,>\,%
Валюта:{%@fd5[#####],c_curr:e,ustring_funcs,Валюта\, пусто - все валюты,RfcChoice,U,record:Curr.abbr,resources:dbores::Curr_select%}
$RangeInput
#}
;--------------------------------------------------
[]
