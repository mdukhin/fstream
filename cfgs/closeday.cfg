; closeday.cfg
;--------------------------------------------------
#opencfg <abbrs.cfg>
#opencfg <4glgpf.cfg>
#opencfg <ofmls.cfg>
SECPATH=abbrs::;4glgpf::;.;$CURCFG::;::

;==================================================
; секция с командами для закpытия дня
;--------------------------------------------------
[close_day]
; для каждого закрываемого дня
; '+' - один раз для всего диапазона дней
char ncd_pipes=\
#{","
; переводим в предварительное состояние
  +closeday::state_change:to_closed2
; выясняем диапазон дней закрытия
  +closeday::state_change:get_days_range
; проверяем документы в состоянии "Введен"
  closeday::all_e_docs:command
; проверяем ОВП
  closeday::conv:command
; проверяем "красное" сальдо
  closeday::redbal:command
; выполняем переоценку
  +closeday::reval:command
; переводим в состояние Закрыт
  +closeday::state_change:to_closed
; отображаем новое состояние дня
  +closeday::envshowpaint:command
; расчитываем кеш оборотов по балансовым счетам
  +closeday::state_change:to2_update
; отчеты дня
  +closeday::reports:days
#}

;==================================================
; шаблоны
;--------------------------------------------------
; простой (обычно используется как template для +pipe)
template [pipe]
; в обычных pipe'ах день, установленный в окружении (Otoday) - это день
; из закрываемого интервала. В pipe'ах, вызываемых с '+', Otoday - это
; день, в котором вызвали закрытие.
; В +pipe'ах доступны переменные Date0, Date1 - диапазон закрываемых
; дней, можно установить новые значения этих переменных - последующие
; pipe'ы будут вызываться для этого интервала.
date Date0=31.12.1997
date Date1=31.12.1997
; код возврата command - 0: продолжить, 1: прервать
;--------------------------------------------------
; проверка через keyform (SOM)
template [somobjpipe]
char msg=Продолжать закрытие?
char obj=dbores::CD_${CURSEC}
long command_RES=0
char command=\
#{
; принудительно устанавливаем проект "Все"
  StdEnv.SetVarLong( "BranchSelect.c_branch", $BRANCH_CONS );
  command_RES=
    ( @{obj}Form.RepaintGo() == -1 )? 0:
    ( AskYesNo( string(date(Otoday()))+": "+@@msg ) == $ANSWER_YES )? 0:
    1;
  Auth.delete_obj_by_name("@{obj}Form");
  Auth.delete_obj_by_name("@{obj}");
#}
char command_ERR=\
#{
 -Auth.delete_obj_by_name("@{obj}Form");
 -Auth.delete_obj_by_name("@{obj}");
#}
;==================================================
; проверка через отчет
; вх: report - имя отчета для проверки
template [reppipe]
char report=
char msg=
long command_RES=0
char obj=CD_${CURSEC}
char command=command_RES=call("$CURCFG::cmds:reppipe_cmd");
char command_ERR=-ObjDelete(@@obj);
;--------------------------------------------------
[cmds]
char reppipe_cmd=\
#{
  ConfigOpen( @@report );
  ConfigSetLong( "@report:Human", 0 );
  RepmngCreate( @@obj, @@report, Otoday() );
  command_RES=
    ( ObjGetInt( @@obj, ${ofmls:::ooMkeystatUserCode0}, 0 ) == -1 )? 0:
    ( ObjDo( "RepFileViewer", ${ofmls:::ooMappShowCurrent}, @@report, "" ) == -1 )? 0:
    ( AskYesNo( string(date(Otoday()))+": "+@@msg ) == $ANSWER_YES )? 0:
    1;
  ObjDelete(@@obj);
  return(@@command_RES);
#}

;==================================================
; команды
;--------------------------------------------------
[all_e_docs] somobjpipe
char msg=\
#{
  В этом дне остались документы в состоянии ВВЕДЕН.
  Продолжать закрытие?
#}
;--------------------------------------------------
[conv] reppipe
char report=report::ПроверкаОВП
char msg=\
#{
  В этом дне осталась ненулевая позиция.
  Продолжать закрытие?
#}
;--------------------------------------------------
[redbal] reppipe
char report=report::КрасноеСальдоН
char msg=\
#{
  В этом дне остались счета на 'красном' сальдо.
  Продолжать закрытие?
#}
;--------------------------------------------------
[reval] default: pipe
char _msg_start=Происходит переоценка...
char _msg_end=Переоценка закончена.
char command=\
#{
  Message( "status_line", 0, @@_msg_start );
  KernOpDayCloseReval( @@Date0 );
  Message( "status_line", -1, @@_msg_end );
  return(0);
#}
char command_ERR=-Message( "status_line", 0, "<null>" );

;==================================================
; запуск групп отчетов
;--------------------------------------------------
[reports]
char days=ReportGroupGo("DayReports");

;==================================================
; системное закрытие
;--------------------------------------------------
[state_change] default: pipe
char msg=
; перевод дней в предварительное состояние
char to_closed2=\
#{
  Message( "status_line", 0, "Начинаем закрытие..." );
  KernOpDayChangeState( Otoday(), $DAY_STATE_CLOSED2 );
  return(0);
#}
char to_closed2_ERR=\
  -Message( "status_line", 0, "<null>" );
; выясняем диапазон дней закрытия
char get_days_range=\
#{
  KernOpDayChangeStateVld( Otoday(), $DAY_STATE_CLOSED, "Date0", "Date1" );
  msg=@@Date0==@@Date1?
    "Закрывать текущий операционный день @Date0?":
    "Закрывать операционные дни с @Date0 по @Date1?";
  return( AskYesNo( @@msg )==$ANSWER_YES? 0: 1 );
#}
; переводим в состояние Закрыт
char to_closed=\
#{
  Message( "status_line", 0, "Системное закрытие..." );
  KernOpDayChangeState( Otoday(), $DAY_STATE_CLOSED );
  return(0);
#}
char to_closed_ERR=\
  -Message( "status_line", 0, "<null>" );
; расчитываем кеш оборотов по балансовым счетам
char to2_update=\
#{
  Message( "status_line", 0, "Расчитываем баланс..." );
  KernOpDayClose5( @Date0 );
  return(0);
#}
char to2_update_ERR=\
  -Message( "status_line", 0, "<null>" );
;==================================================
[envshowpaint]
; перерисовываем подложку
char command=-EnvShowPaint();
;--------------------------------------------------
[]
