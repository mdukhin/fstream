; главный cfg-файл
;--------------------------------------------------
#opencfg <abbrs.cfg>
#opencfg <errkern1.cfg>
SECPATH=abbrs::;::;.

;==================================================
; настройки заведения счетов
;--------------------------------------------------
; при заведении счёта типа "Расчеты с филиалами" проверять ли, что номер
; площадки филиала (ndep) совпадает с номером субсчёта (nsubacc). По
; умолчанию - проверять.
; Здесь мы используем этот тип для заведения обычных счетов, поэтому
; такая проверка не нужна
const boolean CHECK_FILRAS_NDEP_NSUBACC=No

;==================================================
; лицевые счета
;--------------------------------------------------
; описание шаблонов см. curracc.h
; В описании могут использоваться следующие параметры:
; naccnt        - балансовый счет;
; nsubacc       - субсчет;

; ndep          - номер отделения (было);
; ndep          - Вид ОС|Вид счета сотрудника (стало); !!!

; nukind        - вид расчетов с филиалами (было);
; nukind        - Тип амортизации (стало); !!!

; nsymbf2       - символ новой формы N 2;
; c_branch      - внешний номер филиала;
;--------------------------------------------------


; ---------------------------
; обычные счета (контрагенты и прочие)
; ---------------------------
;NCURRACC_PATTERN_0=AAAAA'NNNN'SSSS
;NCURRACC_DESC_0=A:naccnt,N:c_branch,S:nsubacc,

;NCECURRACC_PATTERN_0=AAAAACCCNNNN000SSSSS
;NCECURRACC_DESC_0=$NCURRACC_DESC_7,C:okw

;NCCURRACC_PATTERN_0=$NCECURRACC_PATTERN_7
;NCCURRACC_DESC_0=$NCECURRACC_DESC_7


; ---------------------------
; счета ОС (изначально - расчеты с филиалами)
; ---------------------------
;NCURRACC_PATTERN_7=AAAAA'NNNN'SSSS
;NCURRACC_DESC_7=A:naccnt,N:c_branch,S:nsubacc,

;NCECURRACC_PATTERN_7=AAAAACCCNNNN0000SSSS
;NCECURRACC_DESC_7=$NCURRACC_DESC_7,C:okw

NCURRACC_PATTERN_7=AAAAA'NNN'[ff'][d']SSSS
NCURRACC_DESC_7=A:naccnt,N:c_branch,F:ndep,D:nukind,S:nsubacc

NCECURRACC_PATTERN_7=AAAAACCC00NNNFFDSSSS
NCECURRACC_DESC_7=$NCURRACC_DESC_7,C:okw

NCCURRACC_PATTERN_7=$NCECURRACC_PATTERN_7
NCCURRACC_DESC_7=$NCECURRACC_DESC_7


; ---------------------------
; универсальные счета 
; ---------------------------
NCURRACC_PATTERN_9=AAAAA'NNN'sssssS
NCURRACC_DESC_9=A:naccnt,N:c_branch,S:nsubacc,

NCECURRACC_PATTERN_9=AAAAACCC00NNNSSSSSSS
NCECURRACC_DESC_9=$NCURRACC_DESC_7,C:okw

; ---------------------------
; счета доходов/расходов
; ---------------------------
NCURRACC_PATTERN_3=AAAAA'FFFFF'NNN'SS
NCURRACC_DESC_3=A:naccnt,F:nsymbf2,N:c_branch,S:nsubacc

;NCECURRACC_PATTERN_3=AAAAACCCNNNNFFFFFSSS
NCECURRACC_PATTERN_3=AAAAACCC00FFFFFNNNSS
NCECURRACC_DESC_3=$NCURRACC_DESC_3,C:okw

NCCURRACC_PATTERN_3=$NCECURRACC_PATTERN_3
NCCURRACC_DESC_3=$NCECURRACC_DESC_3

;==================================================
; шаблон ввода счетов внутри системы
;--------------------------------------------------
; btpf ynj
; b - балансовый счет
; t - субсчет
; p - для выбора счетов доходов/расходов
; f - для выбора расчетов с филиалами
; доп. атрибуты
; y - символ доходов/расходов
; n - номер отделения
; j - внешний номер субпроекта (филиала)
char ICURRACCNT_INPUT=\
#{
  Fb//t:j,Fb//t,
  Pb+y/t:j,MPb+y/t,
  0123456789.'
#}

;==================================================
; нахождение счёта переоценки
;--------------------------------------------------
; алгоритм для нахождения счета переоценки
; формат: <имя>[:<ключи>],...
; где в отношении <имя> по ключам:
; a - c_accnt, c - c_curr, r - rate_kind, d - prev/next_change,
; o - open/delete_day (по умолчанию - acr),
; можно получить дебетовый и кредитовый счета переоценки:
; c_reval_d/c.
; Если запись не найдена в одном отношении она ищется в следующем,
; если не найдена во всех - берется из STDACCNT_REVAL...
char REVAL_ACCOUNTS_LOOKUP=curr_reval:cd

;==================================================
; счет для конвертации
;--------------------------------------------------
char STDACCNT_CONVERSION=99999//1

;==================================================
; секция с командами при смене дня
;--------------------------------------------------
[change_day]
const char main_class=DB_Cfgsec
char command=call("$CURCFG::$CURSEC:new_plan");
char som_command=call("$CURCFG::$CURSEC:new_plan");
;--------------------------------------------------
char new_plan=\
#{
; не учитываем счета конверсии
  KernEnvSetLong( "conv", $KERN_CONV_NO );
; хранилище отчетов
  ConfigSetString( "REPOUT", ConfigGet(":::NREPOUT") );
#}

;==================================================
; секция с командами для нового дня
;--------------------------------------------------
[new_day]
const char main_class=DB_Cfgsec
; перед вызовом уже установлен Otoday()
; игнорируем ошибки в несвязанных действиях
char som_command=\
#{
; например
;;; перенос отложенных документов в новый день
;;  Message( "status_line", 0, "Переносим отложенные документы..." );
;;  OpDays.SetKeyDate( "op_day", Otoday() );
;; -OpDays.DoSpc( $spcOpDayDefDocsShift, "<null>" );
;;  Message( "status_line", 0, "<null>" );
#}
char som_command_ERR=\
#{
;; -Message( "status_line", 0, "<null>" );
#}

;==================================================
; нумерация документов, сообщений и т.п.
;--------------------------------------------------
; класс типов указан в наименовании секции
[DocNumTpl]
; наименование класса типов понятное обычному пользователю, пусто:
; наименование из названия секции
char desc=
; наименование поля в таблице <docnum>, если отличается от указанного в
; наименовании секции
char subject=
; таблица с номерами, имеет поля day1 (ключ), day2 и, если указан ресурс
; <extra>, имеет еще один ключ с этим именем 
char docnum_day1=day1
char docnum_day2=day2
char docnum=list_docnum
; требует не-null параметра <c_extra> при вызове, добавляет ключ <extra>
; в таблицу <docnum>, добавляет дополнительное описание сущности в
; ошибки: err_noint, err_dup
char extra=
char extra_desc=
; описание сущности для сообщения о дубликате (если есть - необходимо
; проверять на дубликаты)
char key=d.c_doc
char key2=
char key_desc=Doc
; таблица для проверки дубликатов (может содержать join'ы)
char from=docs d
; поле с номером в этой таблице
char number=d.number
; условие на проверку дубликата (игнорирование текущего ключа будет
; добавлено автоматически)
; o,d - период нумерации (day1,day2), e - значение extra
char where=d.op_day between '#o' and '#d'
; диапазон, который не может превысить следующий номер при сохранении
; (-1: не запоминать новые номера, 0: не проверять, 1: нумерация без
; разрывов, в т.ч. и при удалении)
long num_range=10
; принудительная авто-нумерация (для обеспечения реентерабельности
; тестов с нумерацией надо установить эту переменную в ненулевое
; значение)
long auto_num=0
; коды ошибок
; не найден период нумерации: день документа [, доп.сущность ]
long err_noint=${errkern1:::eKernDocNumNoInterval}
; запись таблицы заблокирована
long err_lock=${errkern1:::eKernDocNumLock}
; дубликат номера: период, сущность [, доп.сущность ]
long err_dup=${errkern1:::eKernDocNumDup}
; слишком большой номер: доступный номер
long err_bignum=${errkern1:::eKernDocBigNum}
; возвращаемый номер - не последний: последний номер
long err_notlast=${errkern1:::eKernNotLastNumInInterval}
;--------------------------------------------------
[DocNum_mem] DocNumTpl
char desc=МВ
char where=${.:where} and type in(\
#{","
  $DOC_TYPE_MEMINT
#})
[DocNum_cmem] DocNumTpl
char desc=ВМД/ВМК
char where=${.:where} and type in(\
#{","
  $DOC_TYPE_CMEM_IN
  $DOC_TYPE_CMEM_OUT
#})

;==================================================
; типы документов
;--------------------------------------------------
[]
; мемориальные ордера
char DOCTYPES_MEM=\
#{"|"
  $DOC_TYPE_MEMINT
  $DOC_TYPE_CMEM_IN
  $DOC_TYPE_CMEM_OUT
#}
char DOCTYPEC_MEM=${:DOCTYPES_MEM%//|/,}

;==================================================
; состояния счетов
;--------------------------------------------------
[accstate_def]
; по умолчанию разрешены все операции

;==================================================
; шаблоны описания принтеров
;--------------------------------------------------
; HP через lpr
template [HPLJ_linux]
desc=
pri_low=-C A
pri_norm=-C B
pri_high=-C C
; 0 -  78 символов в строке (A4)
; 1 -  94 символов в строке (A4)
; 2 - 130 символов в строке (A4)
; 3 - 147 символов в строке (A4)
pitch0=-ocpi=10
pitch1=-ocpi=12
pitch2=-ocpi=17
pitch3=-ocpi=19
pitch4=-ocpi=25
timestamp=
remove=-r
landscapeno=
landscapesrf=
landscape1=-olandscape -olpi=8
landscape2=-olandscape -olpi=7
landscape3=-olandscape -olpi=7
landscape4=-olandscape -olpi=11
noduplex=
long REPPGLN=0
char enq=\
#{
  iconv -f=cp866 -t=utf-8 @file |
  lpr -h -omedia=A4 -olpi=8 -onowrap
    -opage-left=18 -opage-top=36 -opage-bottom=36
    -P ${CURSEC%>_linux}
    @pri() @pitch() @orient() @tstamp()
    @duplex()
    @{ncopies%+-K}@ncopies
    -T "@title"
  @{remfile%+;} @remfile()
#}
char srf=\
#{
  FSDEB= $FSDIR/bin/srf2tex @{_landscape%=no%+-DLANDSCAPE=y}
    @{_pagenum%=no%+-DPAGENUM=y} @file|
  lpr -h -P $UBATCH -o 'PRINTER_TeX=${CURSEC%>_linux}'
    -T "@title"
  @{remfile%+;} @remfile()
#}
char txt_srf=\
#{
  FSDEB= $FSDIR/bin/srf2txt -DTXT_WIDTH=@{txt_width%-80} @file |
  iconv -f=cp866 -t=utf-8 |
  lpr -h -omedia=A4 -olpi=8 -onowrap
    -opage-left=18 -opage-top=36 -opage-bottom=36
    -P ${CURSEC%>_linux}
    @pri() @pitch() @orient() @tstamp()
    @duplex()
    @{ncopies%+-K}@ncopies
    -T "@title"
  @{remfile%+;} @remfile()
#}
;--------------------------------------------------
; e-mail
template [MAIL]
desc=
timestamp=
mailRecipients=${CURSEC}
char enq=$FSDIR/bin/sendfile "@mailRecipients" "@Rtoday_str" "@title" @file
char srf=\
#{
  cd /tmp;
  FSDEB= $FSDIR/bin/srf2html @file `basename @file`.htm;
  @remfile()@{remfile%+;}
  $FSDIR/bin/sendfile "@mailRecipients" "@Rtoday_str" "@title" `basename @file`.htm @file;
  rm -f `basename @file`.htm
#}
char txt_srf=\
#{
  cd /tmp;
  FSDEB= $FSDIR/bin/srf2txt -DTXT_WIDTH=@{txt_width%-80} @file
    `basename @file`.txt;
  @remfile()@{remfile%+;}
  $FSDIR/bin/sendfile "@mailRecipients" "@Rtoday_str" "@title"
    `basename @file`.txt @file;
  rm -f `basename @file`.txt
#}
;--------------------------------------------------
; САМБА
template [SMB]
desc=
; core dump
;text=translate;
text=
bin=
domain=DOMAIN
;_smb_user=guest
_smb_user=unix_mail_user
long REPPGLN=0
char enq=\
#{
  smbclient '$CURSEC' -U @_smb_user -N -W @domain -c
    "@mode()put @file `basename @file`" >/dev/null 2>&1
  @{remfile%+;} @remfile()
#}
char srf=\
#{
  cd /tmp;
  FSDEB= $FSDIR/bin/srf2html @file `basename @file`.htm;
  @remfile()@{remfile%+;}
  smbclient '$CURSEC' -U @_smb_user -N -W @domain -c
    "put `basename @file`.htm" >/dev/null 2>&1;
  rm -f `basename @file`.htm
#}
char txt_srf=\
#{
  cd /tmp;
  FSDEB= $FSDIR/bin/srf2txt -DTXT_WIDTH=@{txt_width%-80} @file
    `basename @file`.txt;
  @remfile()@{remfile%+;}
  smbclient '$CURSEC' -U @_smb_user -N -W @domain -c
    "put `basename @file`.txt" >/dev/null 2>&1;
  rm -f `basename @file`.txt
#}
;==================================================
; список принтеров для выбора переменной PRINTER
[PRINTER_list]
contents=
;--------------------------------------------------
; список принтеров для выбора переменной PRINTER_TeX
[PRINTER_TeX_list]
contents=
;==================================================
; сами принтеры
;--------------------------------------------------
[ubatch]
char desc=Универсальный обработчик
char remove=-r
char enq=\
#{
  enq -P $UBATCH
    @rem() @{opt%+-o '}@opt@{opt%+'}
    -T "@title" @file
#}
;--------------------------------------------------
;[pcl] default: HPLJ
;desc=PCL

;==================================================
; переустановка цветов
; (неотъемлимая часть старта Юнибанка)
;--------------------------------------------------
; константы для цветов
[colors]
long BLACK=0
;long BLUE=1
long BLUE=4
long GREEN=2
long CYAN=3
;long RED=4
long RED=1
long MAGENTA=5
long BROWN=6
long LIGHTGRAY=7
long DARKGRAY=8
long LIGHTBLUE=9
long LIGHTGREEN=10
;long LIGHTCYAN=11
long LIGHTCYAN=14
long LIGHTRED=12
long LIGHTMAGENTA=13
;long YELLOW=14
long YELLOW=11
long WHITE=15
;--------------------------------------------------
long NORMAL=0
long BOLD=15
long BACKGROUND=112
long BOLD_BACKGROUND=240
;--------------------------------------------------
; цвета монохромного терминала
[disp_mono]
NORMAL=BLACK
BOLD=WHITE
;--------------------------------------------------
; цвета цветного терминала
[disp_color]
NORMAL=BLUE
BOLD=YELLOW
BACKGROUND=BLUE
BOLD_BACKGROUND=BLUE
[]

;==================================================
; настройки
; (неотъемлимая часть старта Юнибанка)
;--------------------------------------------------
; хранилище lnf-файлов
LNFDIR=$FSDIR/src/lnfdir
ULNFDIR=$FSDIR/var/ulnfdir
#ifdef UNIRT
LNFDIR=$FSDIR/lnfdir
ULNFDIR=$UNIRTVAR/ulnfdir
#endif
; пути и библиотеки для поиска экранов
SFORM_PATH=$ULNFDIR;$LNFDIR
SFORM_LIBS=lnflib.lnf
RFORM_PATH=$ULNFDIR;$LNFDIR
; хранилище отчетов
NREPOUT=$FSDIR/var/repout
#ifdef UNIRT
NREPOUT=$UNIRTVAR/nrepout
#endif
REPOUT=
;--------------------------------------------------
; журналирование и сообщения
; рабочий журнал (log-файл)
LOGFILE_NAME=$UNIRTLOG/bankN.log
; log-файл с ошибками объектов
ERRLOGFILE_NAME=$UNIRTLOG/bankN.err
; первичный адрес log-сервера - название UNIX-socket'а log-сервера
REGSRV_NAME=regsrv
; вторичный адрес log-сервера: хост:порт
REGSRV_NAME2=
; timeout для коннекта к регсерверу (в секундах)
REGSRV_CONN_TIMEOUT=5
; каталог для socket'ов log-сервера и пользователей
char MESSAGES_DIR=$FSDIR/var/.messages
#ifdef UNIRT
char MESSAGES_DIR=$UNIRTVAR/.messages
#endif
;--------------------------------------------------
; старые объекты
const char ResourceFileName=resource.cfg
;--------------------------------------------------
; название роли, под которой будет доступаться Юнибанк к БД
char UNIBANK_ROLE=bilet

;==================================================
; окружение
;--------------------------------------------------
; предопределённые переменные простой секции окружения
[environment]
; для сохранения счета клиента при вводе документов
long docmng_account=0
; обновление клиентов при обновлении нашего банка и наоборот
long our_bank_client=0
;--------------------------------------------------
; предопределённые переменные объектного окружения
[InitialEv]
; уровень доступа по-умолчанию при заведении счета
; (устанавливается по переменной DEFAULT_ACCOUNT_ACCESS_LEVEL в dbores.cfg)
long user_access=0
;--------------------------------------------------
; секция для сохранения последних введенных значений на уровне func'и
[sedenv]

;==================================================
; меню
;--------------------------------------------------
[]
; имя cfg-файла с описанием
char MENU_CFG_NAME=menu
; удалять ли об'ект пpи выходе из окна (по ESC)
boolean MENU_ITEM_CLOSE_WHEN_EXIT=Yes
; в каком виде показывать меню?
char MENU_STYLE=vertical
; не использовать таги имен
boolean MENU_USE_TAGS=No
; использовать полный путь в меню
boolean MENU_FULL_NAMES=Yes
; когда пользователь хочет обработать запись (клавиши FN4, FN8)
enum spec_alts { vertical, horizontal }
enum spec_alts SPEC_ALTS_STYLE=horizontal

;==================================================
; включение SOMов
;--------------------------------------------------
char SomEnable=y

;==================================================
; для работы календаря
;--------------------------------------------------
[central]
char name=Центpальный
char opday_tab=opdays
char calendar_tab=calendar

;==================================================
; выбор операционного дня
;--------------------------------------------------
[]
; какие дни показывать в таблице
char OPDAYS_WHERE=
; экран для показа дней при выборе
char OPDAYS_SCREEN=fdr_opday_sel

;==================================================
; константы
;--------------------------------------------------
; почему они здесь?
[]
; константы из dbms
long DayMax=2958464
;--------------------------------------------------
; константы из csadd
long ANSWER_ESC=0
long ANSWER_YES=1
long ANSWER_NO=2

;==================================================
; сообщения
;--------------------------------------------------
[]
; Warning
enum warning_place { no, prompt, status_line }
enum warning_place WARNING=status_line
; таймаут отображения Warning по-умолчанию
long WARNING_WAIT=7
;--------------------------------------------------
; Message
enum message_place { no, window, status_line }
enum message_place MESSAGE=status_line
; таймаут отображения Message по-умолчанию
long MESSAGE_WAIT=7

;==================================================
; система печати
;--------------------------------------------------
; длина страницы (для автоматической вставки FF)
long REPPGLN=0
; как отображать FF при просмотре
char PAGE_HEADER=################################ Новая страница ##############################
;--------------------------------------------------
; описание разбора сигнатуры файла отчета
char VIEW_SIGNATURE_DESC=report::ViewSignature
char PRINT_SIGNATURE_DESC=report::ViewSignature
;--------------------------------------------------
; для функции SQL_SimpleReport
[Simple_report_pvt]
border=┌┬┐├┼┤└┴┘│─
[]

;==================================================
; сокращения клавиатуры
;-------------------------------------------
[menu_hotkeys]
..Разное.Рестарт=ALT_R
..Внутренний.Остаток=ALT_O
..Дни.Выбор=CTRL_O
..Разное.Принтер=ALT_I
[]
